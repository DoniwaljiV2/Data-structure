/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
   ListNode* fast = head;
    ListNode* slow = head;
    if(head==NULL||head->next==NULL){
        delete head;
        return NULL;
    }
    // Move fast ahead by n nodes
    for (int i = 0; i <n; i++) {
        fast = fast->next;
    }
    if(fast==NULL){
        return head->next;
    }
    // Move slow ahead by 1 node
    while (fast != NULL && fast->next != NULL){
        fast = fast->next;
        slow = slow->next;
    }
    if (fast != NULL) {
        ListNode* deleteNode = slow->next;
        slow->next = slow->next->next;
        delete deleteNode;
    }
    

    return head;
    }
};
